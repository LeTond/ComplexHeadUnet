import torchclass MetaParameters:	FREEZE_BN = True	PRETRAIN = True	AUGMENTATION = True	NOISE = True	EMPTY = True	MULTYGAP = True	UNET1 = True	# AUGMENTATION = False	FREEZE_BN = False	PRETRAIN = False	NOISE = False	EMPTY = False	MULTYGAP = False	# UNET1 = False	""" CrossEntropy Weights for labeles [Backgroung, LeftVentricle, Myocardium, Fibrosis] """	DICT_CLASS = {				0: "Background",				1: "MTS",				}	""" Network configuration """	# KERNEL = 128	KERNEL = 256	CHANNELS = 1	NUM_CLASS = len(DICT_CLASS)	LR = 1e-3	BT_SZ = 32		# 512 x 512 - max batch_size == 8 if features == 32	EPOCHS = 300	DROPOUT = 0.02	FEATURES = 16	# 32 - 	WDC = 1e-4	EARLY_STOPPING = 10	TMAX = 50	SHUFFLE = True	# CLIP_RATE = [0.1, 0.9]	CLIP_RATE = None	CE_WEIGHTS = torch.FloatTensor([0.2, 0.5])	""" Project configuration """	FOLD_NAME = 'full'	# [01:05] or full	DATASET_NAME = 'Complex_HEAD'		MODEL_NAME = 'model_best'	DATASET_DIR = './Dataset/'	## NEW DIRECTNAMES	UNET1_FOLD = f'Unet1_Fold_{FOLD_NAME}'	UNET1_EVAL_DIR = f'./Results/{UNET1_FOLD}/'	UNET1_PROJ_NAME = f'{UNET1_EVAL_DIR}Lr({LR})_Drp({DROPOUT})_batch({BT_SZ})_L2({WDC})'	ORIGS_DIR = f'{DATASET_DIR}{DATASET_NAME}_images'	MASKS_DIR = f'{DATASET_DIR}{DATASET_NAME}_masks'	NEW_DATA_PATH = f'./Dataset/{DATASET_NAME}_images_new/'	NEW_UNET1_MASK_PATH = f'./Dataset/{DATASET_NAME}_Unet1_mask_new/'meta = MetaParameters()